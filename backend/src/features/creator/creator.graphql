scalar DateTime

type Creator {
  id: Int!
  first_name: String!
  last_name: String!
  middle_name: String
  password: String!
  contact_information: ContactInformation
  created_at: DateTime
  updated_at: DateTime
}

type ContactInformation {
  id: Int!
  creator_id: Int!
  phone: String!
  email: String!
  address: String!
}

input CreateCreatorInput {
  first_name: String!
  last_name: String!
  middle_name: String
  password: String!
  contact_information: CreateContactInformationInput
}

input CreateContactInformationInput {
  phone: String!
  email: String!
  address: String!
}

input AuthenticateCreatorInput {
  email: String!
  password: String!
}

enum Status {
  SUCCESS
  ERROR
}

type AuthResult {
  status: Status!
  message: String!
}


type Query {
  creator(id: Int!): Creator
  creators: [Creator!]!
  me: Creator,
}

type Mutation {
  createCreator(input: CreateCreatorInput!): Creator!
  authenticateCreator(input: AuthenticateCreatorInput): AuthResult
}
