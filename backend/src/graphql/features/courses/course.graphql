
type Course {
  id: ID!
  title: String!
  tagline: String!
  description: String
  categories: [String]
  creator: Creator
  createdAt: String
  studentEnrollment: EnrollmentInfo
  lessons: [Lesson]
}


type Creator {
  firstName: String
  lastName: String
}

type EnrollmentInfo {
  enrolledCourseId: ID!
  enrolledAt: String
  progress: Float
}


input CourseInput {
  title: String!
  tagline: String!
  description: String!
  categories: [String!]!
}


extend type Query {
  courses: [Course!]!
  creatorCourses: [Course!]!
  course(courseId: Int, title: String): Course
  searchCourse(title: String): [Course!]!
}

extend type Mutation {
  createCourse(input: CourseInput!): Course!
  enrollCourse(courseId: Int): BaseResponse
}
